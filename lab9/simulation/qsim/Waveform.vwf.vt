// Copyright (C) 2018  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and its AMPP partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details.

// *****************************************************************************
// This file contains a Verilog test bench with test vectors .The test vectors  
// are exported from a vector file in the Quartus Waveform Editor and apply to  
// the top level entity of the current Quartus project .The user can use this   
// testbench to simulate his design using a third-party simulation tool .       
// *****************************************************************************
// Generated on "04/28/2019 01:17:32"
                                                                                
// Verilog Test Bench (with test vectors) for design :                          lab9
// 
// Simulation tool : 3rd Party
// 

`timescale 1 ps/ 1 ps
module lab9_vlg_vec_tst();
// constants                                           
// general purpose registers
reg CLK;
// wires                                               
wire a1;
wire a2;
wire b1;
wire b2;
wire c1;
wire c2;
wire d1;
wire d2;
wire e1;
wire e2;
wire f1;
wire f2;
wire g1;
wire g2;
wire Q11;
wire Q12;
wire Q13;
wire Q14;
wire Q21;
wire Q22;
wire Q23;
wire Q24;

// assign statements (if any)                          
lab9 i1 (
// port map - connection between master ports and signals/registers   
	.a1(a1),
	.a2(a2),
	.b1(b1),
	.b2(b2),
	.c1(c1),
	.c2(c2),
	.CLK(CLK),
	.d1(d1),
	.d2(d2),
	.e1(e1),
	.e2(e2),
	.f1(f1),
	.f2(f2),
	.g1(g1),
	.g2(g2),
	.Q11(Q11),
	.Q12(Q12),
	.Q13(Q13),
	.Q14(Q14),
	.Q21(Q21),
	.Q22(Q22),
	.Q23(Q23),
	.Q24(Q24)
);
initial 
begin 
#1000000 $finish;
end 

// CLK
always
begin
	CLK = 1'b0;
	CLK = #20000 1'b1;
	#20000;
end 
endmodule

